// Developer Express Code Central Example:
// How to implement hot-track for grid rows during the drag-and-drop operation
// 
// This example illustrates how to highlight rows during the drag-and-drop
// operation. In this example, we have DependencyProperty at the Window class level
// that stores a current row handle of a row over which the mouse is.
// To obtain a
// current row handle, we use the DragOver event. Also, it is necessary to define
// RowStyle and add a trigger that will compare the current row handle with a
// dependency property value and change the current row's background if necessary.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E4415

// Developer Express Code Central Example:
// How to implement hot-track for grid rows during the drag-and-drop operation
// 
// This example illustrates how to highlight rows during the drag-and-drop
// operation. In this example, we have DependencyProperty at the Window class level
// that stores a current row handle of a row over which the mouse is.
// To obtain a
// current row handle, we use the DragOver event. Also, it is necessary to define
// RowStyle and add a trigger that will compare the current row handle with a
// dependency property value and change the current row's background if necessary.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E4415

// Developer Express Code Central Example:
// How to implement hot-track for grid rows
// 
// This example demonstrates how to implement the hot-track functionality in
// TableView.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E3859

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApplication.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WpfApplication.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
